import{m as e,k as t,l as a,n as l,o as s,q as n,s as o,t as i,u as r,v as p,w as d,T as c,H as g,x as u,y as h,z as I,A as m,D as S,F as f,G as v,J as R}from"./preset_utils-D8uJf-0T.chunk.js";import{R as y}from"./suggest_reforges_action-bRNPSoFg.chunk.js";import{$ as P,T as A,a0 as O,a1 as T,a2 as b,a3 as C,a4 as w,a5 as H,a6 as D,a7 as E,G as B,a8 as k,a9 as G,aa as L,ab as F,ac as V,ad as q,ae as x,af as M,ag as U,b as W,a as N,ah as K,ai as j,aj as z,ak as _,al as J,am as $,S as Q,F as X,R as Y}from"./detailed_results-DuTE03lA.chunk.js";import{S as Z}from"./inputs-Bxtz_whU.chunk.js";e({fieldName:"defensiveDelay",label:"Defensives Delay",labelTooltip:"Minimum delay between using more defensive cooldowns."});const ee={inputs:[t({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:P.Blood},{name:"Frost",value:P.Frost},{name:"Unholy",value:P.Unholy}],changeEmitter:e=>A.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"opener",label:"Opener",labelTooltip:"Chose what opener to perform:<br>\t\t\t\t<b>Regular</b>: Regular opener.<br>\t\t\t\t<b>Threat</b>: Full IT spam for max threat.",values:[{name:"Regular",value:O.Regular},{name:"Threat",value:O.Threat}],changeEmitter:e=>A.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"optimizationSetting",label:"Optimization Setting",labelTooltip:"Chose what metric to optimize:<br>\t\t\t\t<b>Hps</b>: Prioritizes holding runes for healing after damage taken.<br>\t\t\t\t<b>Tps</b>: Prioritizes spending runes for icy touch spam.",values:[{name:"Hps",value:T.Hps},{name:"Tps",value:T.Tps}],changeEmitter:e=>A.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"bloodSpell",label:"Blood Spell",labelTooltip:"Chose what blood rune spender to use.",values:[{name:"Blood Strike",value:b.BloodStrike},{name:"Blood Boil",value:b.BloodBoil},{name:"Heart Strike",value:b.HeartStrike}],changeEmitter:e=>A.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"bloodTapPrio",label:"Blood Tap",labelTooltip:"Chose how to use Blood Tap:<br>\t\t\t\t<b>Use as Defensive Cooldown</b>: Use as defined in Cooldowns (Requires T10 4pc).<br>\t\t\t\t<b>Offensive</b>: Use Blood Tap for extra Icy Touches.",values:[{name:"Use as Defensive Cooldown",value:C.Defensive},{name:"Offensive",value:C.Offensive}],changeEmitter:e=>A.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])})]},te={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-65s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-64s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-55s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-44s"}}},{action:{castSpell:{spellId:{spellId:43265}}},doAtValue:{const:{val:"-30s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-22s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-7s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-1.5s"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"55%"}}}},castSpell:{spellId:{spellId:48743}}}},{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"89s"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:81130}}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:55095}}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49222}}}]}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"60%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{auraIsActive:{auraId:{spellId:55233}}},castSpell:{spellId:{spellId:82176}}}},{action:{condition:{auraIsActive:{auraId:{spellId:96171}}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},castSpell:{spellId:{spellId:47568}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:77535}}}}}]}},castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{and:{vals:[{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"1"}}}}]}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49998,tag:1}}}]}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:81256}}}}},castSpell:{spellId:{spellId:46584}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"80%"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}}]}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{auraIsActive:{auraId:{spellId:81141}}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{cmp:{op:"OpEq",lhs:{currentNonDeathRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:57330}}}}]},ae={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-65s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-64s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-55s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-44s"}}},{action:{castSpell:{spellId:{spellId:43265}}},doAtValue:{const:{val:"-30s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-22s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-7s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-1.5s"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"55%"}}}},castSpell:{spellId:{spellId:48743}}}},{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentTime:{}},rhs:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentTime:{}},rhs:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{remainingTime:{}},rhs:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{remainingTime:{}},rhs:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{condition:{spellIsReady:{spellId:{spellId:49028}}},castSpell:{spellId:{otherId:"OtherActionPotion"}}}},{action:{condition:{and:{vals:[{spellIsReady:{spellId:{spellId:49028}}},{auraIsActive:{auraId:{spellId:53365}}},{auraIsKnown:{auraId:{spellId:53365}}}]}},castSpell:{spellId:{spellId:26297}}}},{action:{condition:{and:{vals:[{spellIsReady:{spellId:{spellId:49028}}},{auraIsActive:{auraId:{spellId:53365}}},{auraIsKnown:{auraId:{spellId:53365}}}]}},castSpell:{spellId:{spellId:33697}}}},{action:{condition:{and:{vals:[{spellIsReady:{spellId:{spellId:49028}}},{auraIsActive:{auraId:{spellId:53365}}},{auraIsKnown:{auraId:{spellId:53365}}}]}},castSpell:{spellId:{spellId:82174}}}},{action:{condition:{and:{vals:[{spellIsReady:{spellId:{spellId:49028}}},{auraIsActive:{auraId:{spellId:53365}}},{auraIsKnown:{auraId:{spellId:53365}}}]}},castSpell:{spellId:{spellId:49028}}}},{action:{condition:{and:{vals:[{not:{val:{dotIsActive:{spellId:{spellId:55095}}}}},{not:{val:{dotIsActive:{spellId:{spellId:55078}}}}},{auraIsActive:{auraId:{spellId:81256}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"30%"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}}]}},castSpell:{spellId:{spellId:49222}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"70%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentNonDeathRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentNonDeathRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentNonDeathRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"0"}}}}]}},castSpell:{spellId:{spellId:47568}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{dotRemainingTime:{spellId:{spellId:55095}}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpLe",lhs:{dotRemainingTime:{spellId:{spellId:55078}}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"7s"}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentNonDeathRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"1"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"90"}}}},{cmp:{op:"OpGe",lhs:{spellTimeToReady:{spellId:{spellId:49028}}},rhs:{const:{val:"3s"}}}}]}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpGe",lhs:{runeCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"5s"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"0"}}}}]}},castSpell:{spellId:{spellId:45529}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:81256}}}}},castSpell:{spellId:{spellId:46584}}}},{action:{condition:{and:{vals:[{auraIsActive:{auraId:{spellId:96171}}},{auraIsKnown:{auraId:{spellId:96171}}}]}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{and:{vals:[{auraIsActive:{auraId:{spellId:81141}}},{auraIsKnown:{auraId:{spellId:81141}}}]}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{spellTimeToReady:{spellId:{spellId:49028}}},rhs:{const:{val:"5s"}}}}]}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:57330}}}}]},le={items:[{id:65181,enchant:4208,gems:[52294,52218],reforging:158},{id:60227,gems:[52218],reforging:124},{id:65183,enchant:4198,gems:[52221]},{id:69879,randomSuffix:-118,enchant:4100,reforging:165},{id:65062,enchant:4103,gems:[52243,52218],reforging:161},{id:60228,enchant:4191,gems:[52218,0],reforging:144},{id:65180,enchant:4106,gems:[52242,0],reforging:165},{id:65369,randomSuffix:-223,gems:[52218,52242]},{id:65182,enchant:4127,gems:[52231,52231],reforging:167},{id:65075,enchant:4062,gems:[52243],reforging:160},{id:60226,gems:[52231],reforging:145},{id:65106,reforging:158},{id:65048},{id:65072,reforging:160},{id:65003,enchant:3368,reforging:145},{},{id:64674,gems:[52242],reforging:160}]},se={items:[{id:71478,enchant:4208,gems:[68779,52243]},{id:71563,reforging:160},{id:71612,enchant:4198,gems:[52218],reforging:124},{id:71227,enchant:4100,reforging:158},{id:71469,enchant:4103,gems:[52243,52218]},{id:71470,enchant:4191,gems:[52242,0],reforging:131},{id:71419,enchant:4106,gems:[52243,0],reforging:167},{id:71443,gems:[52218,52242],reforging:160},{id:71479,enchant:4127,gems:[52221,52242],reforging:158},{id:71404,enchant:4062,gems:[52243],reforging:144},{id:71215,gems:[52243],reforging:145},{id:71433,gems:[52221],reforging:158},{id:65072,reforging:160},{id:69109},{id:70723,enchant:3368,gems:[52243,52243],reforging:145},{},{id:71587,gems:[52242],reforging:144}]},ne={items:[{id:71478,enchant:4206,gems:[52294,52242],reforging:153},{id:71563},{id:71612,enchant:4198,gems:[52218]},{id:71227,enchant:4100,reforging:151},{id:71469,enchant:4103,gems:[52243,52218]},{id:71470,enchant:4191,gems:[52242,0]},{id:71477,enchant:4107,gems:[52243,0]},{id:71443,gems:[52218,52242]},{id:71431,enchant:4270,gems:[52221,52242]},{id:71404,enchant:4062,gems:[52243]},{id:60226,gems:[52242]},{id:71433,gems:[52221]},{id:65048},{id:69109},{id:70723,enchant:3368,gems:[52243,52243],reforging:165},{},{id:71587,gems:[52242],reforging:153}]},oe={items:[{id:71478,enchant:4208,gems:[68779,52243],reforging:153},{id:71446},{id:71480,enchant:4202,gems:[52218],reforging:168},{id:71227,enchant:4100,reforging:152},{id:71469,enchant:4103,gems:[52243,52218],reforging:168},{id:71418,enchant:4191,gems:[0]},{id:71419,enchant:4106,gems:[52243,0],reforging:168},{id:71250,gems:[52218,52242]},{id:71479,enchant:4127,gems:[52221,52242]},{id:71404,enchant:4062,gems:[52243],reforging:153},{id:71215,gems:[52243]},{id:71433,gems:[52221]},{id:65072},{id:69167},{id:70723,enchant:3368,gems:[52243,52243],reforging:165},{},{id:71587,gems:[52242],reforging:153}]},ie=a("Pre-Raid",{items:[{id:59359,enchant:4206,gems:[52294,59480,59493]},{id:56319,reforging:129},{id:56318,enchant:4198,gems:[52221]},{id:62383,enchant:4100,reforging:122},{id:55058,enchant:4103,gems:[52242],reforging:133},{id:57870,enchant:3850,gems:[52231,0]},{id:56428,enchant:4121,gems:[52221,0],reforging:129},{id:55059,gems:[52242,52242],reforging:122},{id:58102,enchant:4270,gems:[52231,52242],reforging:126},{id:62418,enchant:4062,gems:[52242],reforging:132},{id:56444},{id:62440},{id:58483,gems:[52242]},{id:56347},{id:56342,enchant:3847,reforging:151},{},{id:62243,gems:[52242],reforging:139}]}),re=a("P1",le),pe=a("P3-Balanced",se),de=a("P3-Defensive",ne),ce=a("P3-Offensive",oe),ge=l("Simple",ae),ue=l("Defensive",te),he=s("P1",w.fromMap({[H.StatStrength]:2.45,[H.StatAgility]:1.2,[H.StatStamina]:3,[H.StatAttackPower]:1,[H.StatHitRating]:6,[H.StatCritRating]:1.65,[H.StatHasteRating]:1.58,[H.StatExpertiseRating]:5,[H.StatArmor]:1,[H.StatDodgeRating]:2.5,[H.StatParryRating]:2.44,[H.StatBonusArmor]:1,[H.StatMasteryRating]:7},{[D.PseudoStatMainHandDps]:12.29,[D.PseudoStatOffHandDps]:0})),Ie=s("P3",w.fromMap({[H.StatStrength]:2.47,[H.StatAgility]:1.46,[H.StatStamina]:7,[H.StatAttackPower]:1,[H.StatHitRating]:6,[H.StatCritRating]:1,[H.StatHasteRating]:4,[H.StatExpertiseRating]:5,[H.StatArmor]:1,[H.StatDodgeRating]:.5,[H.StatParryRating]:.5,[H.StatBonusArmor]:1,[H.StatMasteryRating]:3},{[D.PseudoStatMainHandDps]:12.34,[D.PseudoStatOffHandDps]:0})),me={name:"Blood",data:E.create({talentsString:"02323203102122111321-3-033",glyphs:B.create({prime1:k.GlyphOfDeathStrike,prime2:k.GlyphOfHeartStrike,prime3:k.GlyphOfRuneStrike,major1:G.GlyphOfAntiMagicShell,major2:G.GlyphOfDancingRuneWeapon,major3:G.GlyphOfBoneShield,minor1:L.GlyphOfDeathGate,minor2:L.GlyphOfPathOfFrost,minor3:L.GlyphOfHornOfWinter})})},Se=n("P1",{gear:re,epWeights:he}),fe=n("P3",{gear:pe,epWeights:Ie}),ve=F.create({classOptions:{startingRunicPower:0}}),Re=V.create({flask:q.FlaskOfSteelskin,food:x.FoodBeerBasedCrocolisk,defaultPotion:M.GolembloodPotion,prepopPotion:M.GolembloodPotion,tinkerHands:U.TinkerHandsSynapseSprings}),ye={profession1:W.Engineering,profession2:W.Leatherworking,distanceFromTarget:5},Pe=o(Q.SpecBloodDeathKnight,{cssClass:"blood-death-knight-sim-ui",cssScheme:N.getCssClass(N.DeathKnight),knownIssues:[],epStats:[H.StatStamina,H.StatStrength,H.StatAgility,H.StatAttackPower,H.StatExpertiseRating,H.StatHitRating,H.StatCritRating,H.StatHasteRating,H.StatHealth,H.StatArmor,H.StatBonusArmor,H.StatDodgeRating,H.StatParryRating,H.StatNatureResistance,H.StatShadowResistance,H.StatFrostResistance,H.StatMasteryRating],epPseudoStats:[D.PseudoStatMainHandDps,D.PseudoStatOffHandDps],epReferenceStat:H.StatAttackPower,displayStats:K.createDisplayStatArray([H.StatHealth,H.StatArmor,H.StatStamina,H.StatStrength,H.StatAgility,H.StatAttackPower,H.StatExpertiseRating,H.StatMasteryRating],[D.PseudoStatSpellHitPercent,D.PseudoStatSpellCritPercent,D.PseudoStatPhysicalHitPercent,D.PseudoStatPhysicalCritPercent,D.PseudoStatMeleeHastePercent,D.PseudoStatDodgePercent,D.PseudoStatParryPercent]),defaults:{gear:re.gear,epWeights:he.epWeights,statCaps:(()=>{const e=(new w).withPseudoStat(D.PseudoStatPhysicalHitPercent,8),t=(new w).withStat(H.StatExpertiseRating,26*j);return e.add(t)})(),other:ye,consumes:Re,talents:me.data,specOptions:ve,raidBuffs:z.create({retributionAura:!0,powerWordFortitude:!0,markOfTheWild:!0,icyTalons:!0,hornOfWinter:!0,abominationsMight:!0,leaderOfThePack:!0,bloodlust:!0,arcaneTactics:!0,devotionAura:!0,resistanceAura:!0}),partyBuffs:_.create({}),individualBuffs:J.create({}),debuffs:$.create({bloodFrenzy:!0,sunderArmor:!0,ebonPlaguebringer:!0,criticalMass:!0,vindication:!0,frostFever:!0})},modifyDisplayStats:e=>{const t=e.getCurrentStats();if(t.finalStats){const e=.08*t.finalStats.stats[H.StatStamina],a=14*e;return{buffs:(new w).addStat(H.StatHealth,a).addStat(H.StatStamina,e)}}return{}},playerIconInputs:[],rotationInputs:ee,includeBuffDebuffInputs:[i],excludeBuffDebuffInputs:[r,p],otherInputs:{inputs:[d,c,g,u,h,I,m,S,f,Z(),v]},encounterPicker:{showExecuteProportion:!1},presets:{epWeights:[he,Ie],rotations:[ge,ue],talents:[me],gear:[ie,re,pe,de,ce],builds:[Se,fe]},autoRotation:e=>ge.rotation.rotation,raidSimPresets:[{spec:Q.SpecBloodDeathKnight,talents:me.data,specOptions:ve,consumes:Re,defaultFactionRaces:{[X.Unknown]:Y.RaceUnknown,[X.Alliance]:Y.RaceWorgen,[X.Horde]:Y.RaceOrc},defaultGear:{[X.Unknown]:{},[X.Alliance]:{1:re.gear,2:re.gear,3:re.gear,4:re.gear},[X.Horde]:{1:re.gear,2:re.gear,3:re.gear,4:re.gear}},otherDefaults:ye}]});class Ae extends R{constructor(e,t){super(e,t,Pe),t.sim.waitForInit().then((()=>{new y(this,{getEPDefaults:e=>e.getGear().getEquippedItems().some((e=>(e?.item.phase||0)>=3))?Ie.epWeights:he.epWeights})}))}}export{Ae as B};
